{
    "version": 3,
    "sources": [
        "../../../src/home/controller/task.js"
    ],
    "names": [
        "saveorupdateAction",
        "taskEntity",
        "post",
        "id",
        "model",
        "where",
        "update",
        "affectedRows",
        "json",
        "code",
        "add",
        "insertId",
        "error",
        "listAction",
        "page",
        "get",
        "order",
        "countSelect",
        "data",
        "getAction",
        "find",
        "deleteAction",
        "delete",
        "Base"
    ],
    "mappings": "AAAA;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;;;;;;;;;;;;;AAGE;;;;mBAIMA,kB;;;;;;;;AAEIC,wB,GAAa,KAAKC,IAAL,E;AACbC,gB,GAAOF,U,CAAPE,E;;mBACFA,E;;;;;;qBACuB,KAAKC,KAAL,CAAW,MAAX,EAAmBC,KAAnB,CAAyB,EAAEF,MAAF,EAAzB,EAAiCG,MAAjC,CAAwCL,UAAxC,C;;;AAArBM,0B;;AACJ,mBAAKC,IAAL,CAAU;AACRC,sBAAM,GADE;AAERF;AAFQ,eAAV;;;;;;qBAKqB,KAAKH,KAAL,CAAW,MAAX,EAAmBM,GAAnB,CAAuBT,UAAvB,C;;;AAAjBU,sB;;AACJ,mBAAKH,IAAL,CAAU;AACRC,sBAAM,GADE;AAERE;AAFQ,eAAV;;;;;;;;;;AAMF,mBAAKH,IAAL,CAAU;AACRC,sBAAM,GADE;AAERG;AAFQ,eAAV;;;;;;;;;;;;;;;;;mBAMEC,U;;;;;;;;;qBAEe,KAAKT,KAAL,CAAW,MAAX,EAAmBU,IAAnB,CAAwB,KAAKC,GAAL,CAAS,SAAT,CAAxB,EAA6C,KAAKA,GAAL,CAAS,UAAT,CAA7C,EAAmEC,KAAnE,CAAyE,EAACb,IAAI,MAAL,EAAzE,EAAuFc,WAAvF,E;;;AAAbC,kB;;AACJ,mBAAKV,IAAL,CAAU;AACRC,sBAAM,GADE;AAERS;AAFQ,eAAV;;;;;;;;AAKA,mBAAKV,IAAL,CAAU;AACRC,sBAAM,GADE;AAERG;AAFQ,eAAV;;;;;;;;;;;;;;;;;mBAMEO,S;;;;;;;;;qBAEe,KAAKf,KAAL,CAAW,MAAX,EAAmBC,KAAnB,CAAyB,EAAEF,IAAI,KAAKY,GAAL,CAAS,IAAT,CAAN,EAAzB,EAAiDK,IAAjD,E;;;AAAbF,kB;;AACJ,mBAAKV,IAAL,CAAU;AACRC,sBAAM,GADE;AAERS;AAFQ,eAAV;;;;;;;;AAKA,mBAAKV,IAAL,CAAU;AACRC,sBAAM,GADE;AAERG;AAFQ,eAAV;;;;;;;;;;;;;;;;;mBAMES,Y;;;;;;;;;qBAEuB,KAAKjB,KAAL,CAAW,MAAX,EAAmBC,KAAnB,CAAyB,EAACF,IAAI,KAAKD,IAAL,CAAU,IAAV,CAAL,EAAzB,EAAgDoB,MAAhD,E;;;AAArBf,0B;;AACJ,mBAAKC,IAAL,CAAU;AACRC,sBAAM,GADE;AAERF;AAFQ,eAAV;;;;;;;;AAKA,mBAAKC,IAAL,CAAU;AACRC,sBAAM,GADE;AAERG;AAFQ,eAAV;;;;;;;;;;;;;;;;;;EAjEuBW,c",
    "file": "../../../src/home/controller/task.js",
    "sourcesContent": [
        "'use strict';\n\nimport Base from './base.js';\n\nexport default class extends Base {\n  /**\n   * index action\n   * @return {Promise} []\n   */\n  async saveorupdateAction() {\n    try {\n      const taskEntity = this.post()\n      let { id } = taskEntity\n      if (id) { // update\n        let affectedRows = await this.model('task').where({ id }).update(taskEntity);\n        this.json({\n          code: 200,\n          affectedRows\n        })\n      } else { // new\n        let insertId = await this.model('task').add(taskEntity)\n        this.json({\n          code: 200,\n          insertId\n        })\n      }\n    } catch (error) {\n      this.json({\n        code: 500,\n        error\n      })\n    }\n  }\n  async listAction() {\n    try {\n      let data = await this.model('task').page(this.get('current'), this.get('pageSize')).order({id: 'desc'}).countSelect()\n      this.json({\n        code: 200,\n        data\n      })\n    } catch (error) {\n      this.json({\n        code: 500,\n        error\n      })\n    }\n  }\n  async getAction() {\n    try {\n      let data = await this.model('task').where({ id: this.get('id') }).find()\n      this.json({\n        code: 200,\n        data\n      })\n    } catch (error) {\n      this.json({\n        code: 500,\n        error\n      })\n    }\n  }\n  async deleteAction() {\n    try {\n      let affectedRows = await this.model('task').where({id: this.post('id')}).delete()\n      this.json({\n        code: 200,\n        affectedRows\n      })\n    } catch (error) {\n      this.json({\n        code: 500,\n        error\n      })\n    }\n  }\n}"
    ]
}